# 🚀 GUÍA DE PRODUCCIÓN - ADMIN-SKYPASS

## 📋 REQUISITOS DEL SERVIDOR

### Sistema Operativo
- Ubuntu 20.04 LTS o superior (recomendado)
- CentOS 8+ o RHEL 8+
- Debian 10+

### Hardware Mínimo
- CPU: 2 cores
- RAM: 4GB
- Disco: 20GB SSD
- Red: Conexión estable a internet

## 🔧 INSTALACIÓN PASO A PASO

### 1. ACTUALIZAR SISTEMA
```bash
sudo apt update && sudo apt upgrade -y
```

### 2. INSTALAR PYTHON 3.9+
```bash
sudo apt install python3 python3-pip python3-venv -y
```

### 3. INSTALAR GUNICORN
```bash
pip install gunicorn
```

### 4. INSTALAR POSTGRESQL
```bash
sudo apt install postgresql postgresql-contrib -y
sudo systemctl enable postgresql
sudo systemctl start postgresql
```

### 5. CONFIGURAR BASE DE DATOS
```bash
sudo -u postgres psql
CREATE DATABASE admin_skypass;
CREATE USER skypass_user WITH PASSWORD 'tu_password_seguro';
GRANT ALL PRIVILEGES ON DATABASE admin_skypass TO skypass_user;
\q
```

### 6. INSTALAR REDIS (para tareas en background)
```bash
sudo apt install redis-server -y
sudo systemctl enable redis-server
sudo systemctl start redis-server
```

### 7. CLONAR REPOSITORIO
```bash
cd /opt
sudo git clone https://github.com/josemestre3009/Admin-Skypass.git
sudo chown -R www-data:www-data Admin-Skypass
cd Admin-Skypass
```

### 8. CONFIGURAR ENTORNO VIRTUAL
```bash
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
pip install gunicorn
```

### 9. CONFIGURAR VARIABLES DE ENTORNO
```bash
sudo nano .env
```

**Contenido del archivo .env:**
```
FLASK_ENV=production
SECRET_KEY=tu_clave_secreta_muy_larga_y_segura
DATABASE_URL=postgresql://skypass_user:tu_password_seguro@localhost/admin_skypass
REDIS_URL=redis://localhost:6379/0

# Configuración de Email
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=True
MAIL_USERNAME=tu_email@gmail.com
MAIL_PASSWORD=tu_app_password
MAIL_DEFAULT_SENDER=tu_email@gmail.com

# Configuración de la aplicación
HOST=0.0.0.0
PORT=8000
DEBUG=False
```

### 10. INICIALIZAR BASE DE DATOS
```bash
source venv/bin/activate
python app.py --init-db
```

## 🔄 CONFIGURAR SERVICIOS DEL SISTEMA

### 1. CREAR SERVICIO SYSTEMD
```bash
sudo nano /etc/systemd/system/admin-skypass.service
```

**Contenido del servicio:**
```ini
[Unit]
Description=Admin-Skypass Web Application
After=network.target postgresql.service redis.service

[Service]
Type=simple
User=www-data
Group=www-data
WorkingDirectory=/opt/Admin-Skypass
Environment=PATH=/opt/Admin-Skypass/venv/bin
ExecStart=/opt/Admin-Skypass/venv/bin/gunicorn --bind 0.0.0.0:8000 --workers 3 app:app
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
```

### 2. HABILITAR Y INICIAR SERVICIO
```bash
sudo systemctl daemon-reload
sudo systemctl enable admin-skypass
sudo systemctl start admin-skypass
sudo systemctl status admin-skypass
```

### 3. CONFIGURAR FIREWALL
```bash
sudo ufw allow 8000/tcp
sudo ufw allow 22/tcp
sudo ufw enable
```

## 📊 MONITOREO Y LOGS

### 1. VER LOGS DE LA APLICACIÓN
```bash
sudo journalctl -u admin-skypass -f
```

### 2. VER LOGS DE GUNICORN
```bash
sudo tail -f /var/log/admin-skypass.log
```

### 3. MONITOREO DE RECURSOS
```bash
# Instalar htop para monitoreo
sudo apt install htop -y
htop
```

## 🔄 BACKUP Y MANTENIMIENTO

### 1. SCRIPT DE BACKUP
```bash
sudo nano /opt/backup_skypass.sh
```

**Contenido del script:**
```bash
#!/bin/bash
DATE=$(date +%Y%m%d_%H%M%S)
BACKUP_DIR="/opt/backups"
APP_DIR="/opt/Admin-Skypass"

# Crear directorio de backup
mkdir -p $BACKUP_DIR

# Backup de la base de datos
pg_dump admin_skypass > $BACKUP_DIR/db_backup_$DATE.sql

# Backup de archivos de la aplicación
tar -czf $BACKUP_DIR/app_backup_$DATE.tar.gz $APP_DIR

# Mantener solo los últimos 7 días de backups
find $BACKUP_DIR -name "*.sql" -mtime +7 -delete
find $BACKUP_DIR -name "*.tar.gz" -mtime +7 -delete

echo "Backup completado: $DATE"
```

### 2. HABILITAR BACKUP AUTOMÁTICO
```bash
sudo chmod +x /opt/backup_skypass.sh
sudo crontab -e
# Agregar esta línea para backup diario a las 2 AM:
0 2 * * * /opt/backup_skypass.sh
```

## 🚨 COMANDOS ÚTILES

### Reiniciar servicios
```bash
sudo systemctl restart admin-skypass
sudo systemctl restart postgresql
sudo systemctl restart redis-server
```

### Ver estado de servicios
```bash
sudo systemctl status admin-skypass
sudo systemctl status postgresql
sudo systemctl status redis-server
```

### Actualizar aplicación
```bash
cd /opt/Admin-Skypass
sudo git pull origin main
source venv/bin/activate
pip install -r requirements.txt
sudo systemctl restart admin-skypass
```

## 🔧 CONFIGURACIÓN DE FIREWALL

```bash
sudo ufw allow 22/tcp
sudo ufw allow 8000/tcp
sudo ufw enable
```

## 📱 CONFIGURACIÓN DE EMAIL

### Para Gmail:
1. Habilitar verificación en 2 pasos
2. Generar contraseña de aplicación
3. Usar esa contraseña en MAIL_PASSWORD

### Para otros proveedores:
- Outlook: smtp-mail.outlook.com:587
- Yahoo: smtp.mail.yahoo.com:587
- Personalizado: consultar con tu proveedor

## ✅ VERIFICACIÓN FINAL

1. **Acceder a la aplicación:** http://TU_IP:8000
2. **Probar funcionalidades:**
   - Login
   - Dashboard
   - Agregar ISP
   - Envío de alertas
   - Monitoreo automático

## 🆘 SOLUCIÓN DE PROBLEMAS

### Si la aplicación no inicia:
```bash
sudo journalctl -u admin-skypass --no-pager
```

### Si hay errores de base de datos:
```bash
sudo -u postgres psql admin_skypass
\dt
\q
```

### Si Gunicorn no funciona:
```bash
sudo systemctl status admin-skypass
sudo journalctl -u admin-skypass --no-pager
```

## 📞 SOPORTE

- **Repositorio:** https://github.com/josemestre3009/Admin-Skypass
- **Documentación:** Ver README.md
- **Issues:** Crear issue en GitHub

---
**¡Sistema listo para producción!** 🚀
