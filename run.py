#!/usr/bin/env python3
"""
Script de inicio para Admin Skypass
Sistema de Administraci√≥n de ISPs
"""

import os
import sys
from app import app, db

def main():
    """Funci√≥n principal para iniciar la aplicaci√≥n"""
    
    print("üåê Admin Skypass - Sistema de Administraci√≥n de ISPs")
    print("=" * 50)
    
    # Verificar dependencias
    try:
        import flask
        import flask_sqlalchemy
        import requests
        print("‚úÖ Dependencias verificadas correctamente")
    except ImportError as e:
        print(f"‚ùå Error: Falta dependencia - {e}")
        print("üí° Ejecuta: pip install -r requirements.txt")
        sys.exit(1)
    
    # Crear base de datos si no existe
    with app.app_context():
        try:
            db.create_all()
            print("‚úÖ Base de datos inicializada")
        except Exception as e:
            print(f"‚ùå Error al inicializar base de datos: {e}")
            sys.exit(1)
    
    # Verificar configuraci√≥n
    print("\nüîß Configuraci√≥n del sistema:")
    print(f"   - Base de datos: {app.config['SQLALCHEMY_DATABASE_URI']}")
    print(f"   - Modo debug: {app.config.get('DEBUG', False)}")
    print(f"   - Email configurado: {'S√≠' if app.config.get('GMAIL_USER') else 'No'}")
    
    # Mostrar informaci√≥n de acceso
    print("\nüöÄ Iniciando servidor...")
    print("   - URL: http://localhost:5000")
    print("   - Usuario: admin")
    print("   - Contrase√±a: admin123")
    print("\n‚ö†Ô∏è  IMPORTANTE: Cambia la contrase√±a por defecto en producci√≥n")
    print("\nüìñ Para m√°s informaci√≥n, consulta el README.md")
    print("=" * 50)
    
    # Iniciar aplicaci√≥n
    try:
        app.run(debug=True, host='0.0.0.0', port=5000)
    except KeyboardInterrupt:
        print("\n\nüëã Aplicaci√≥n detenida por el usuario")
    except Exception as e:
        print(f"\n‚ùå Error al iniciar la aplicaci√≥n: {e}")
        sys.exit(1)

if __name__ == '__main__':
    main()
